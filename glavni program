#include<iostream>
#include<cstdlib>
#include<cstring>
#include<ctime>
//#include "red_polje.h"
#include "red_pokazivaci.h"
using namespace std;
int br_el=0;
bool provjera(tpacijent &generirani){
switch (generirani.ci){ 
        case 1: 
        if(generirani.ei==1||generirani.di==3||generirani.di==4) return false; 
        break;
        case 3: 
        if(generirani.ei==4) return false; 
        break;
        case 4: 
        if(generirani.ei==4||generirani.ei==5) return false;
        break;
}
return true;
}
void generiraj(queue *Q){
        int broj;
        cout<<"Koliko uredjenih petorki zelite generirati?"<<endl;
        cin>>broj;
        tpacijent novi;
        for(int i=0;i<broj;i++){
                do{
                novi.ai=50+rand()%301;
                novi.bi=50+rand()%301;
                novi.ci=1+rand()%5;
                novi.di=1+rand()%5;
                novi.ei=1+rand()%5;
                }while(!provjera(novi));
                enqueueQ(novi,Q);
        }        
}
void ispis_pacijenta(tpacijent pacijent){
        cout<<"Ime i prezime:"<<pacijent.ime<<" "<<pacijent.prezime<<endl;
        cout<<"Datum rodjenja:"<<pacijent.datum.dan<<"."<<pacijent.datum.mjesec<<"."<<pacijent.datum.godina<<endl;
        cout<<"Spol:"<<pacijent.spol<<endl;
        cout<<"Prioritet:";
        if(pacijent.ci==1) cout<<"Hitni slucaj [1]"<<endl;
        if(pacijent.ci==2) cout<<"Invalidi [2]"<<endl;
        if(pacijent.ci==3) cout<<"Trudnice [3]"<<endl;
        if(pacijent.ci==4) cout<<"Djeca mladja od 6 god [4]"<<endl;
        if(pacijent.ci==5) cout<<"Ostali [5]"<<endl;
        cout<<"Usluga:";
        if(pacijent.di==1) cout<<"Pregled [1]"<<endl;
        if(pacijent.di==2) cout<<"Previjanje [2]"<<endl;
        if(pacijent.di==3) cout<<"Recepti [3]"<<endl;
        if(pacijent.di==4) cout<<"Uputnice [4]"<<endl;
        cout<<"Vrsta ordinacije:";
        if(pacijent.ei==1) cout<<"Obiteljska medicina [1]"<<endl;
        if(pacijent.ei==2) cout<<"Oftamologija [2]"<<endl;
        if(pacijent.ei==3) cout<<"Dermatovenerologija [3]"<<endl;
        if(pacijent.ei==4) cout<<"Ginekologija [4]"<<endl;
        if(pacijent.ei==5) cout<<"Urologija [5]"<<endl;
        cout<<"-------------------------------------------\n"<<endl<<endl;
}
void ispis_svih(queue *Q){
                queue *pomocni= new queue;
                initQ(pomocni);
                while(!IsEmptyQ(Q)){
                enqueueQ(frontQ(Q),pomocni);
                ispis_pacijenta(frontQ(Q));
                dequeueQ(Q);
                }
                while(!IsEmptyQ(pomocni))  {
                        enqueueQ(frontQ(pomocni),Q);
                        dequeueQ(pomocni);
                }        
}

void red_prioritet(queue *Q){
        queue *pomocni=new queue;
        initQ(pomocni);
        queue *prioritetni=new queue;
        initQ(prioritetni);
        for(int i=1; i<=5; i++) {
                         while (!IsEmptyQ(Q))
                         {
                          if(frontQ(Q).ci == i){
                                   enqueueQ(frontQ(Q),prioritetni);
                                   dequeueQ(Q);
                          }           
                          else{
                                  enqueueQ(frontQ(Q),pomocni); 
                                  dequeueQ(Q);
                          }  
                        }
                        while (!IsEmptyQ(pomocni)) {
                                enqueueQ(frontQ(pomocni),Q);
                                dequeueQ(pomocni);
                        }
                         
        }
        while (!IsEmptyQ(prioritetni))
                        {
                                enqueueQ(frontQ(prioritetni),Q);
                                dequeueQ(prioritetni);
                        } 
        delete pomocni;
        delete prioritetni;        
}
void unesi_pacijente(queue *generirani, queue *Q){
        cout<<"Generiranim petorkama pridruzujem ime,prezime,datum i spol pacijenta..."<<endl;
        tpacijent novi;
        while(!IsEmptyQ(generirani)){ 
                novi=frontQ(generirani); 
                for(int i=0;i<3;i++){        
            for(int i=0;i<7;i++) novi.ime[i]=rand()%26+97;
            novi.ime[7]='\0';
                for(int i=0;i<7;i++) 
                novi.prezime[i]=rand()%26+97;
                novi.prezime[7]='\0';                
                novi.datum.dan=rand()%31+1;        
                novi.datum.mjesec=rand()%12+1;
                if(novi.ci==4) //za djecu mladju od 6 godina ide posebni datum
                        novi.datum.godina=2013-rand()%6;
                else {
                if(novi.ci==3)novi.datum.godina=1940+rand()%59;
            else novi.datum.godina=1940+rand()%67; 
                }
                novi.spol=(rand()%2)? 'm' : 'z';        
                br_el++;
                enqueueQ(novi,Q);
                }
                dequeueQ(generirani);        
        }
        cout<<"\n[Simulacija cekaonice [prema prioritetu ulaze pacijenti] ]:\n------------"<<endl;
        red_prioritet(Q);
        ispis_svih(Q);
        cout<<endl;
        tpacijent tekuci;
        cout<<"[  Ispis pacijentica starijih od 25 godina koje su posjetile oftamologa  ]:\n-----------"<<endl;
        for(int i=0;i<br_el;i++){
                tekuci=frontQ(Q);
                if(tekuci.datum.godina<1988&&tekuci.ei==2&&tekuci.spol=='z') 
                ispis_pacijenta(tekuci);
                enqueueQ(tekuci,Q);        
                dequeueQ(Q);
        
        }
}
void izbaci(queue *Q){
  if(IsEmptyQ(Q)){
          return;
  }
  tpacijent tekuci=frontQ(Q);
  dequeueQ(Q);
  izbaci(Q);
  if(tekuci.ci==2&&tekuci.datum.godina<1963&&tekuci.ei==1&&tekuci.di==2){
          ispis_pacijenta(tekuci);
          br_el--;
          return;
  }
  enqueueQ(tekuci,Q);
}
void red_obrnuto(queue *Q){
        if(IsEmptyQ(Q)){
                return;
        }
        tpacijent tekuci=frontQ(Q);
        dequeueQ(Q);
        red_obrnuto(Q);
        enqueueQ(tekuci,Q);        
}
void pusti_uputnicu_ili_recept(queue *Q, queue *brzi){
        if(IsEmptyQ(Q)){
                return;
        }
        tpacijent tekuci=frontQ(Q);
        dequeueQ(Q);
        pusti_uputnicu_ili_recept(Q,brzi);
        
        if(tekuci.di==3||tekuci.di==4)
                {
                        enqueueQ(tekuci,brzi);
                        br_el--;
                }
        else enqueueQ(tekuci,Q);                
        
}
void red_brzih_usluga(queue *Q){
    cout<<"U cekaonici:\n---------"<<endl;
    ispis_svih(Q);
    cout<<"\n\n";
        queue *brzi=new queue;
        initQ(brzi);
        cout<<"Pustam u brzi red one koji zele podici uputnicu ili recept..."<<endl;
        pusti_uputnicu_ili_recept(Q,brzi); 
        cout<<"Prebacujem 30% na zacelju glavnog reda u brzi red..."<<endl;
        int tridesetposto=(br_el*30)/100;
        cout<<"Trenutni broj u glavnom redu:"<<br_el<<endl;
        cout<<"trideset posto je:"<<tridesetposto<<endl;
        system("pause");

         for(int i=0;i<tridesetposto;i++){
                enqueueQ(frontQ(Q),brzi);
                dequeueQ(Q);
                br_el--;
        }
        cout<<"Stanje brzog reda:\n---------------------"<<endl;
        red_prioritet(brzi);
        ispis_svih(brzi);
        cout<<"Stanje glavnog reda nakon prebacivanja pacijenata u brzi red :\n-------------------"<<endl;
        red_obrnuto(Q);
        ispis_svih(Q);
        delete brzi;
}

int main(){
        srand(time(0));
        rand();
        queue *Q=new queue;
        queue *generirani= new queue;
        initQ(Q);
        initQ(generirani);
        int izbor;
        do{
                cout<<"[I  Z  B  O  R  N  I  K]"<<endl;
                cout<<"----------------------------------------------"<<endl;
                cout<<"1.Generiranje niza N petorki"<<endl;
                cout<<"2.Upis novih pacjenata u red"<<endl;
                cout<<"3.Izbacivanje pacijenta: invalid, >50god, previjanje, obiteljska medicina"<<endl;
                cout<<"4.Simuliranje reda brzih usluga..."<<endl;
                cout<<"5.Ispis svih"<<endl;
                cout<<"6.Red obrnuto"<<endl;
                cout<<"9.Izlaz"<<endl;
                cout<<"Odaberi opciju:";
                cin>>izbor;
                system("cls");
                switch(izbor)
                {
                        case 1:
                        generiraj(generirani);
                        break;
                        case 2:
                        unesi_pacijente(generirani,Q);
                        break;
                        case 3:
                        cout<<"Izbacujem...."<<endl;
                        cout<<"Sljedeci pacijenti su izbaceni:\n------------------"<<endl;
                        izbaci(Q);
                        red_obrnuto(Q);
                        break;
                        case 4:
                        red_brzih_usluga(Q);
                        break;
                        case 5:
                        ispis_svih(Q);
                        break;
                        case 6:
                        red_obrnuto(Q);
                        break;
                        case 9:cout<<"Izlaz!"<<endl;break;
                        default:cout<<"Pogresan unos!"<<endl;
                }
                
        }while(izbor!=9);
        system("pause");
}
